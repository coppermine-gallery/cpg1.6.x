<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
<head>
<title>Backup &amp; Moving - Coppermine Photo Gallery - Documentation &amp; Manual</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="language" content="en" />
<meta name="copyright" content="Coppermine dev team" />
<meta name="description" content="" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta name="MSSmartTagsPreventParsing" content="true" />
<meta http-equiv="imagetoolbar" content="no" />
<!--
  SVN version info:

  Coppermine version: 1.6.01
  $HeadURL$
  $Revision$

-->
<link rel="stylesheet" type="text/css" href="../style/style.css" media="all" />
<link rel="stylesheet" type="text/css" href="../style/screen.css" media="screen" />
<link rel="stylesheet" type="text/css" href="../style/print.css" media="print" />
<link rel="shortcut icon" href="../favicon.ico" />
<script src="../js/jquery.js" type="text/javascript"></script>
<script src="../js/jquery.treeview.js" type="text/javascript"></script>
<script src="script.js" type="text/javascript"></script>
</head>
<body>
<h1 id="docheader">Coppermine Photo Gallery v1.6.x: Documentation and Manual</h1>
<div id="toc">
<a href="toc.htm">Table of Contents</a>
</div>

<a name="backup_move"></a><h1>Backing up &amp; Moving<a href="#backup_move" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h1>
<p>Originally, this section of the documentation was intended for something else (an export feature that later was dropped from the Coppermine package, as it wasn't working as expected and caused more issues than it solved). That's why this page still has got a misleading file name.</p>
<p>This page deals with the related topics how to <a href="#backup">back up</a> Coppermine and how to <a href="#moving">move</a> it.</p>

<div class="indent">

    <a name="backup"></a><a name="backup_export"></a><h2>Backing up your gallery<a href="#backup" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>
    <p>This page is meant to explain how to back up a coppermine-driven gallery.</p>
    <p>Backups can be used to restore your gallery somewhere in case something goes wrong (i.e. server hard-drive crash, hacking, own mistake) or if you want to <a href="#moving">move</a> (move servers, move to another webhost, use another application).</p>

    <p>Coppermine stores content both on file system level (i.e. on your webspace - that's the hard drive of your webserver) as well as on database level. Think of the database as a giant array of tables that are connected one with the other. Although the database is (technically) being stored in files as well, you can't just backup the file that represents the database. This is being caused by the way that a database works. Additionally, you usually don't have access to the file that represents the database (but don't start the wicth hunt and try to find it - you wouldn't be able to use it anyway). That's why the backup process needs to be two-fold: you need to back up your files and you need to back up your database. Only backing up one of them without the other will result in an incomplete backup that hardly can be usefull.</p>

    <div class="indent">

        <a name="backup_file"></a><h3>File Backup<a href="#backup_file" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
        <p>The backup on file system level is pretty straightforward and you already should be familiar with the technology, assuming that you have installed coppermine in the way the coppermine dev team recommends: using your favorite <a href="dev_tools.htm#dev_tools_ftp_client">FTP application</a>. Do not trust buggy tools integrated into <abbr title="What You See Is What You Get">WYSIWYG</abbr> editors. Do not trust wannabe &quot;web-FTP&quot; clients: you need the real thing - a genuine FTP client. If you don't have one already, get one first before continuing.</p>

        <a name="backup_file_complete"></a><h4>Complete File Backup<a href="#backup_file_complete" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h4>
        <p>The term "complete file backup" means in this case "a file backup of the entire coppermine gallery". It's advisable to perform this at least once, so you have a full backup for disaster recovery.</p>
        <p>To actually perform such a backup, create a folder on your local hard drive first. Of course you need to make sure in advance that there is enough room left on the storage device you use (your internal or external hard drive in most cases) to hold the entire gallery once the backup is done. If you're short on disk space on your client, you could burn the contents of your backup to a CD or DVD once your backup is complete and then free the precious hard drive space once you have copied everything to CD/DVD.</p>

        <a name="backup_file_partial"></a><h4>Partial File Backup<a href="#backup_file_partial" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h4>
        <p>If you perform frequent backups you don't have to make a complete file backup each time, as the coppermine core code will (i.e. all the files that make coppermine work on the server) will not change from one backup to the other. That's why you can then perform a partial back, i.e. only the contents of the albums folder of coppermine that corresponds to <tt class="code">http://example.com/your_coppermine_folder/albums/</tt>. If you need to perform a restore later, you will have to restore your complete backup first and then restore your partial backup that was created later and therfor is more accurate and recent.</p>

        <a name="backup_file_incremental"></a><h4>Incremental File Backup<a href="#backup_file_incremental" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h4>
        <p>There are nifty tools available from third parties that will perform an incremental backup by FTP, i.e. they will only backup the files that are new or have changed since the last time the backup was performed. This will reduce the time needed to perform a backup dramatically, but on the other hand will make restoring after a disaster a bit trickier - you should only use that option if you know what you're doing.</p>

        <a name="backup_database"></a><h3>Database Backup<a href="#backup_database" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
        <p>Coppermine creates during initial install several database tables that are being used to store the content:</p>
        <ul>
        	<li>The pictures table stores the path on file system level to the content of your gallery (i.e. the images)</li>
        	<li>The config table stores your configuration</li>
        	<li>The users table stores data about your registered users (including the admin account)</li>
        	<li>...</li>
        </ul>
        <p>There are many other tables that store specific aspects of the content of your gallery - for a complete list of all tables and the structure within them, take a look at the <a href="dev_database.htm#db_intro">database schema</a>. All relevant tables of a coppermine gallery have the same prefix - the one you chose during initial install. To perform a database backup, make sure to backup <strong>all</strong> coppermine tables, i.e. all that have the prefix you chose during install. If you're not sure about the prefix, download the file include/config.inc.php with your FTP app to your client and then edit/view it using a plain text editor (notepad.exe is fine): the prefix should be named there. By default, the prefix name is <tt class="code">cpg15x_</tt>.</p>

        <a name="backup_database_what"></a><h4>Database Backup: what needs to be backed up?<a href="#backup_database_what" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h4>
        <p>The wording may differ, depending on the tool and it's version you use to perform the backup, you you need to know what exactly to backup.</p>
        <p>A full database backup contains both the <em>structure</em> of the database table definitions (i.e. the "instructions" needed to create the empty tables if they have been lost or need to be created on another server) as well as the data (i.e. the actual table content).</p>
        <p>The tables coppermine consists of are not equally important though:</p>
        <ul>
            <li>The table <a href="dev_database.htm#db_hit_stats">cpg15x_hit_stats</a> can become quite large if you have enabled the feature &quot;<a href="configuration.htm#admin_logging_hitdetails">Keep detailed hit statistics</a>&quot;. Subsequently, the backup can become quite large if the contents of that table is being taken into accound during frequent backups. Escepcially when moving a coppermine install from one server to the other it might be a good idea to skip the detailed hits statistics and therefore not backup the contents of this particular table.</li>
            <li>The table <a href="dev_database.htm#db_sessions">cpg15x_sessions</a> tracks sessions for logged in and anonymous users. It gets populated automatically if it is empty, so you don't necessarily to back it up.</li>
            <li>The table <a href="dev_database.htm#db_temp_messages">cpg15x_temp_messages</a> is used to store messages from one page to the other - the content is very short-lived and will be purged frequently, so the table doesn't need to be preserved when performing frquent backups.</li>
        </ul>
        <p>Keep in mind though that coppermine will complain (i.e. there will be an error message) if a table is <strong>missing</strong>, so you need to create the above-mentioned tables in the first place, but they can be empty.</p>

        <a name="backup_database_tools"></a><h4>Database Backup Tools<a href="#backup_database_tools" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h4>
        <p>Coppermine does <strong>not</strong> come with a database backup tool - you need to find one by yourself and use that. However, there is a list of tools the dev team recommends:</p>
        <ul>
        	<li>
        	    <a name="backup_database_tools_phpmyadmin"></a><h5>phpMyAdmin<a href="#backup_database_tools_phpmyadmin" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h5>
        	    <div class="cpg_message_info">Open-source web application for database management that can be downloaded (for free) and installed on your webserver (easy installation). It comes with multiple language support. Your webhost may even provide this tool.<br />
        	    [<a href="dev_tools.htm#dev_tools_phpmyadmin">more</a>]
        	    </div>
        	    <p>Please note that the coppermine dev team can not support you on the usage of phpMyAdmin - so here's just a <em>short summary</em> that is <strong>not</strong> meant to be a replacement for the documentation for phpMyAdmin:</p>
        	    <ul>
        	        <li>Point your browser to the URL where your copy of phpMyAdmin resides (assuming that you have successfully installed phpMyAdmin on your webspace or that your webhost is providing phpMyAdmin for you)</li>
        	        <li>If applicable (i.e. if the security settings of phpMyAdmin are configured accordingly), provide your phpMyAdmin login data if you're prompted for it</li>
        	        <li>If applicable (i.e. if you have access to <em>several</em> databases), select the database where your coppermine database tables resides in (the database you have selected when installing coppermine) from the top left frame in the phpMyAdmin interface</li>
        	        <li>In the right phpMyAdmin frame at the very top, select &quot;Export&quot; from the navigation</li>
        	        <li>On the screen &quot;View dump (schema) of database&quot;, select the tables you want to backup (by default, all tables within the selected database are selected) from the box labelled &quot;Export&quot;. If you're not sure, back up all coppermine tables, i.e. all tables that have the same table prefix that you specified when installing coppermine in the first place</li>
        	        <li>In the &quot;Export&quot; box, leave the radio button &quot;SQL&quot; selected that is already selected by default</li>
        	        <li>Make sure that the checkbox &quot;Structure&quot; is ticked</li>
        	        <li>Do <strong>not</strong> tick the checkbox &quot;Drop table&quot; - dropping means &quot;<em>deleting the table after the backup is complete</em>&quot;, which is something you almost certainly would not want to happen, as coppermine would stop working immediately and you'd have to perform a restore.</li>
        	        <li>Make sure that the checkbox &quot;Data&quot; is ticked</li>
        	        <li>It's advisable (although not mandatory) to tick the checkbox &quot;Complete inserts&quot;</li>
        	        <li>It's advisable (although not mandatory) to tick the checkbox &quot;Extended inserts&quot;</li>
        	        <li>It's advisable to tick the checkbox &quot;Save as file&quot; that will give you a file to download instead of just getting the output of the dump displayed on screen that you would then have to copy &amp; paste into a plain text file.</li>
        	        <li>If you're running into time-outs while creating the database dump, try enabling compression for the file (you can of course only use the compression format that is available on your webserver)</li>
        	    </ul>
        	    <p class="cpg_message_warning">If you're not sure, read the documentation that comes with phpMyAdmin and google for backup tutorials on the internet; the coppermine support board is <strong>not</strong> the correct place to ask for support on phpMyAdmin usage.</p>
        	</li>
        	<li>
        	    <a name="backup_database_tools_mysqldumper"></a><h5>mySqlDumper<a href="#backup_database_tools_mysqldumper" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h5>
        	    <div class="cpg_message_info">MySqlDumper is a web app that can be downloaded and installed on your webserver. It is meant to be used to create backups of your mysql databse (and eventually restore those backups). Particularly helpful if you don't have shell access to your webserver and regular mySQL backups fail due to time-outs.<br />
        	    [<a href="dev_tools.htm#dev_tools_mysqldumper">more</a>]
        	    </div>
        	</li>
        	<li>
        	    <a name="backup_database_tools_shell_mysqldump"></a><h5>mysqldump<a href="#backup_database_tools_shell_mysqldump" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h5>
        	    The tool mysqdump must not be confused with mySqlDumper or vice versa: mysqldump is a script that belongs to the mysql resources themselves that only applies (i.e. that you can only use) if you have shell access (which is rarely the case for most, webhosted users).
        	    [<a href="http://dev.mysql.com/doc/refman/5.0/en/mysqldump.html" rel="external" class="external">more</a>]
        	</li>
        	<li>
        	    <a name="backup_database_tools_shell_mysqlhotcopy"></a><h5>mysqlhotcopy<a href="#backup_database_tools_shell_mysqlhotcopy" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h5>
        	    The Perl script mysqlhotcopy belongs to the mysql resources. It is the fastest way to make a backup of the database or single tables, but it can be run only on the same machine where the database directories are located. mysqlhotcopy works only for backing up MyISAM and ARCHIVE tables. It runs on Unix and NetWare.
        	    [<a href="http://dev.mysql.com/doc/refman/5.0/en/mysqlhotcopy.html" rel="external" class="external">more</a>]
        	</li>
        </ul>

        <a name="backup_database_after"></a><h4>After the database backup<a href="#backup_database_after" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h4>
        <p>After performing the manual database backup it's important to make sure that the dump you just created works as expected. Therefore, you should really try to open the dump file first and see if it not broken. Ideally, you should perform a restore on a testbed to make sure everything works as expected.</p>
        <p>There have been many users already who relied on their backup without ever having tested it once: if you never test your backup strategy, you will never know if it will enable you to perform the restore in case of a disaster. Since there are many things that can go wrong, it's really recommended to test your backup.</p>

    </div>

    <a name="moving"></a><h2>Moving your gallery<a href="#moving" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>
    <p>Your coppermine-driven gallery can be moved around on your webserver as well as from one webspace to the other. Here's how you accomplish those tasks:</p>

    <div class="indent">

        <a name="moving_folder"></a><h3>Moving on your webserver<a href="#moving_folder" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
        Moving your gallery on your webserver (e.g. from a particular folder to the webroot or vice versa) is comparatively easy. Coppermine consists of two components:
        <ul>
            <li>Files</li>
            <li>Database records</li>
        </ul>
        The good thing about moving your files/folders around is the fact that coppermine does not store the absolute path to a file within the database, but only a relative one: the relative path inside the albums folder). Subsequently, you can move around the folder where your coppermine gallery resides in on your server easily and you won't have to change your database records accordingly.<br />
        <p class="cpg_message_warning">Just keep in mind that you need to move the entire coppermine folder around, i.e. you must move <strong>all</strong> files and folders around and not just some of them. The folder and file structure within your coppermine folder needs to remain intact when moving it.</p>
        Basically there are two options for this:
        <ul>
        	<li>
        		<h4>You just rename the folder your gallery resides in</h4>
        		This is the setup that is the most easiest option. If your coppermine-driven gallery currently resides at <tt class="code">http://example.com/your_coppermine_folder/</tt> and you find that URL to hard to memorize for your visitors, you could just rename the folder <tt class="code">your_coppermine_folder</tt> to something else that is easier to memorize, e.g. <tt class="code">gallery</tt> or <tt class="code">photos</tt>. To accomplish that, you just use your favorite </a href="dev_tools.htm#dev_tools_ftp_client"><abbr title="File Transfer Protocol">FTP</abbr> application</a> and rename the folder that corresponds to <tt class="code">http://example.com/your_coppermine_folder/</tt> accordingly. All that is then left to do is described in the section <a href="#moving_config_url">Changing Coppermine's URL in config</a>.
        	</li>
        	<li>
        		<h4>You move the coppermine folder contents around</h4>
        		Unless you have shell access to your webserver, this is a three-step process: first you copy the entire content of your coppermine folder to a temporary folder on your client using your FTP application. Then you restore the content of that folder in the target directory on your server. Finally, you need to <a href="install_permissions.htm#permissions_folders">set permissions</a> for the new folder structure.
        		<div class="cpg_example">
        			Let's assume that your website is at <tt class="code">http://example.com/</tt> and your Coppermine gallery is located at <tt class="code">http://example.com/coppermine/</tt>. Let's assume that the webroot <tt class="code">http://example.com/</tt> corresponds to the absolute path <tt class="code">/home/htdocs/</tt> on the server and subsequently the gallery corresponds to the server path <tt class="code">/home/htdocs/coppermine/</tt>. Let's assume that you want to move it to a folder named &quot;<tt class="code">photos</tt>&quot; that resides within a folder named &quot;<tt class="code">multimedia</tt>&quot;. For that target folder the absolute path would be <tt class="code">/home/htdocs/multimedia/photos/</tt> and the target URL would be <tt class="code">http://example.com/multimedia/photos/</tt>.
        			<table border="0" cellspacing="0" cellpadding="0" class="maintable">
        				<tr>
        					<th class="tableh1">
        						Step
        					</th>
        					<th class="tableh1">
        						Webserver
        					</th>
        					<th class="tableh1">
        						Direction
        					</th>
        					<th class="tableh1">
        						Client
        					</th>
        					<th class="tableh1">
        						Explanation
        					</th>
        				</tr>
        				<tr>
        					<td class="tableb">
        						1
        					</td>
        					<td class="tableb">
        						URL:<br /><tt class="code smallcode">http://example.com/coppermine/</tt><hr />
        						Absolute path:<br /><tt class="code smallcode">/home/htdocs/coppermine/</tt>
        					</td>
        					<td class="tableb" align="center">
        						<span style="font-size:xx-large">&rarr;</span>
        					</td>
        					<td class="tableb">
        						<tt class="code smallcode">c:\temp\coppermine\</tt>
        					</td>
        					<td class="tableb">
        						Use your FTP app to copy the gallery folder and everything within it into a temporary folder on your client's hard drive.
        					</td>
        				</tr>
        				<tr>
        					<td class="tableb tableb_alternate">
        						2
        					</td>
        					<td class="tableb tableb_alternate">
        						URL:<br /><tt class="code smallcode">http://example.com/multimedia/photos/</tt><hr />
        						Absolute path:<br /><tt class="code smallcode">/home/htdocs/multimedia/photos/</tt>
        					</td>
        					<td class="tableb tableb_alternate" align="center">
        						<span style="font-size:xx-large">&larr;</span>
        					</td>
        					<td class="tableb tableb_alternate">
        						<tt class="code smallcode">c:\temp\coppermine\</tt>
        					</td>
        					<td class="tableb tableb_alternate">
        						Use your FTP app to copy all content from the local temporary folder to the new target folder on the server.
        					</td>
        				</tr>
        				<tr>
        					<td class="tableb">
        						3
        					</td>
        					<td class="tableb">
        						URL:<br /><tt class="code smallcode">http://example.com/multimedia/photos/albums/</tt><hr />
        						Absolute path:<br /><tt class="code smallcode">/home/htdocs/multimedia/photos/albums/</tt>
        					</td>
        					<td class="tableb" align="center">
        						<abbr title="not applicable">n/a</abbr>
        					</td>
        					<td class="tableb">
        						-
        					</td>
        					<td class="tableb">
        						Set permissions (using your FTP app) on the albums folder that needs to be writable.
        					</td>
        				</tr>
        			</table>
        			Finally you could delete the local temporary folder where you stored your coppermine files in, but it's advisable to keep that folder instead as a backup.
        		</div>
        		What folder is the source folder and the target folder doesn't matter at all, nor does it matter how deep the coppermine folder is nested within the folder structure on your webserver. The steps needed to perform when moving coppermine from a folder to the webroot or vice versa don't differ at all: the webroot in fact just is represented by a folder on webserver file system level, and you move the content of a folder around.
        	</li>
        </ul>

        <a name="moving_server"></a><h3>Moving from one webserver to the other<a href="#moving_server" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
        <p>This scenario usually applies when switching from one webhost to the other. In fact you create a copy of your files (a <a href="export.htm#backup_file_complete">complete file backup</a>) and a copy of your database (complete <a href="export.htm#backup_database">database dump</a>) on the old server and restore those copies on the new server.</p>
        <p>You're encouraged to create and maintain frequent backups in case anything goes wrong, so you really should have a backup already. However, if you don't have one, you should create one <strong>now</strong>. You need to keep in mind that there might be a downtime of your site when moving from one webhost to the other. Ideally, the downtime will be neglible, but you usually won't be able to access the gallery on the old server and the gallery on the new server under the same URL at the same time. Therefore, you need to backup the old server while you still can, i.e. before your old webhosting contract expires and you no longer can access the old server to create the backup. If you don't have a backup and your webserver is no longer accessible you will be out of luck: nobody will be able to help you recover your gallery - it's absolutely mandatory to have a working backup both of your files as well as your database.</p>
        <p>Refer to the corresponding ections on this page to figure out in detail how to create the backups.</p>
        Below is a summary of the needed steps and some notes on the tricky stuff:
        <ul>
        	<li>
        		<h4>Maintenance mode</h4>
        		Tell your visitors that there will be maintenance works on your site and that there might be downtimes. If you allow visitor interaction like uploading of files or posting of comments, you better put the gallery into <a href="configuration.htm#admin_general_offline">offline mode</a> or make sure otherwise that the content of your database won't change after having created the dump.
        	</li>
        	<li>
        		<h4>Backup your files</h4>
        		FTP-download your complete coppermine-folder (including all folders and files within it) from the old server to your client's hard drive, preserving the structure of the sub-folders.
        	</li>
        	<li>
        		<h4>Create a dump of your database</h4>
        		Use a tool like phpMyAdmin or similar to <a href="#backup_database">backup your database</a>, i.e. to get a dump (backup) of your mySQL database entries. Make sure that you're not just creating a backup of your table structure - you need to backup the actual content (i.e. the individual database records) as well.
        	</li>
        	<li>
        		<h4>Verify your backup is working</h4>
        		Check if the mySQL-dump contains all data (open the zipped dump file and use a text editor to view it). Ideally, restore the entire gallery on a testbed in case you can't access the new server yet to make sure your backup is valid and working.
        	</li>
        	<li>
        		<h4>FTP-upload your coppermine-folder to the new server</h4>
        		Restore the files on the new server if you can, again preserving the exact structure of sub-folders that exists in your backup on your client.
        	</li>
        	<li>
        		<h4>Set permissions</h4>
        		Coppermine needs write permissions on some folders, so you need to <a href="install_permissions.htm#permissions_folders">set permissions</a> on the new server in the similar way you had to do when installing Coppermine in the first place on the old server. Don't forget this step, it's important!
        	</li>
        	<li>
        		<h4>Restore the database</h4>
        		Restore the mySQL table by running the queries of the dump files you created on the old server. To accomplish that, you will need the same tool on the new server (the target server) that you have used on the old server to create the backup; if you have used phpMyAdmin on the old server to create the backup you should use phpMyAdmin on the new server as well to restore the dump.
        	</li>
        	<li>
        		<h4>Edit the database settings</h4>
        		Your new webhost must have provided you with the mySQL access data (you already had to use that data to restore the dump on the new server). That mySQL data usually will differ from the mySQL data on the old webserver, so you will have to edit the file that contains those data. Use a plain text editor (notepad.exe is fine) and edit <tt class="code">include/config.inc.php</tt>: inside that file, you will find the old mySQL data that you will need to overwrite with the mySQL data for the new server.
        	</li>
        	<li>
        		<h4>Disable maintenance mode</h4>
        		If you have originally put your gallery into offline mode on the old server you have to remember to turn offline mode off on the new server. Go to coppermine's config and edit the corresponding setting.
        	</li>
        	<li>
        		<h4>Test everything thoroughly</h4>
        		Test every facet of your gallery: try to log on as regular (non-admin) user, try to use <a href="uploading_http.htm#upload_http">http uploads</a>, post a comment etc.
        	</li>
        </ul>



        <a name="moving_disadvantages"></a><h3>Disadvantages of renaming<a href="#moving_disadvantages" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
        <div class="cpg_message_warning">
        	There are several disadvantages when changing the URL of your gallery:
        	<ul>
        		<li>Bookmarks / favorites of your visitors will no longer apply</li>
        		<li>Search engine indexes will point to the old URIs. Subsequently, you will lose the ranking in those search indexes</li>
        	</ul>
        </div>
        Tim Berners-Lee (the &quot;inventor&quot; of the <abbr title="world wide web">www</abbr>) coined the motto &quot;<a href="http://www.w3.org/Provider/Style/URI" rel="external" class="external">Cool URIs don't change</a>&quot; that still applies, so you better think twice before renaming your coppermine folder once it has been established. It's better to choose a clever folder name in the first place (when initially installing Coppermine). Anyway, if you <em>must</em> change the URI of your gallery (or in fact any other URL), you should at least set up some redirector that takes care of the change: on Apache-driven servers (and provided that your webserver supports that feature), you could set up a redirection using a <tt class="code">.htaccess file</tt> with the <a href="http://httpd.apache.org/docs/1.3/mod/mod_alias.html#redirect" rel="external" class="external">redirect directive</a>.


        <a name="moving_config_url"></a><h3>Changing Coppermine's URL in config<a href="#moving_config_url" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
        <div class="cpg_message_validation">
        	Whenever the URL of your gallery changes (i.e. after having moved your gallery around on your webserver or after renaming the folder it resided in), you have to reflect the changed URL in coppermine's config:
        </div>
        	<ul>
        		<li>Go to the new URL in your browser's address bar</li>
        		<li>Log in as admin if you're not already logged in</li>
        		<li>Go to Coppermine's <a href="configuration.htm">config panel</a></li>
        		<li>Expand &quot;<a href="configuration.htm#admin_general">General settings</a>&quot;</li>
        		<li>Enter the new URL into the field &quot;<a href="configuration.htm#admin_general_coppermine-url">URL of your coppermine gallery folder</a>&quot;</li>
        		<li>Scroll to the bottom of the config panel</li>
        		<li>Save your changes by submitting the form using the corresponding button at the bottom of the page</li>
        	</ul>

    </div>

</div>
<a name="export_end"></a><a name="backup_end"></a>


<div id="doc_footer">
	<div class="doc_info_wrapper">
		<span id="doc_last_changed">$LastChangedDate$</span>
		<span id="doc_revision">$Revision$</span>
	</div>
</div>
</body>
</html>
